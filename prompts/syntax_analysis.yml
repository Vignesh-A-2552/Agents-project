name: "Syntax Analysis"
description: "Analyzes code for syntax errors and language-specific issues"
version: "1.1"
input_parameters:
  - name: "language"
    description: "Programming language of the code"
    required: true
    examples:
      - "python"
      - "javascript"
      - "java"
      - "c++"
      - "go"
  - name: "code" 
    description: "Source code to analyze"
    required: true
output_format:
  type: "json"
  schema:
    errors:
      - line: "integer"
        column: "integer"
        error: "string"
        error_type: "string"
        severity: "string"
        suggestion: "string"
template: |
  You are an expert code analysis tool specializing in syntax validation. Analyze the following {language} code for syntax errors, structural issues, and language-specific violations.

  Code to analyze:
  ```{language}
  {code}
  ```

  Instructions:
  - Identify syntax errors (missing semicolons, brackets, quotes, etc.)
  - Check for structural issues (unclosed blocks, invalid nesting)
  - Look for language-specific violations (reserved keywords, invalid identifiers)
  - Provide line AND column numbers when possible
  - Classify error types (syntax, structural, semantic)
  - Use severity levels: "error" (prevents execution), "warning" (best practice violation)
  - Suggest specific fixes when applicable

  Return your response as a valid JSON object in this exact format:
  {{"errors": [{{ "line": <int>, "column": <int>, "error": "<description>", "error_type": "<type>", "severity": "<level>", "suggestion": "<fix>" }}]}}

  Error types: "syntax", "structural", "semantic", "style"
  Severity levels: "error", "warning"

  If no syntax errors are found, return: {{ "errors": [] }}

  JSON Response: